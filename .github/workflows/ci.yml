# name: Update Badges

# on:
#   push:
#     branches:
#       - JSL
#   pull_request:
#     branches:
#       - JSL

# jobs:
#   test:
#     runs-on: ubuntu-20.04

#     strategy:
#       matrix:
#         python-version: [3.9]

#     steps:
#       - uses: actions/checkout@v2

#       - name: Set up Python ${{ matrix.python-version }}
#         uses: actions/setup-python@v2
#         with:
#           python-version: ${{ matrix.python-version }}

#       - name: Install dependencies and coverage
#         run: |
#           python -m pip install --upgrade pip
#           pip install tox coverage

#       - name: Run tests with coverage
#         run: |
#           tox

#       - name: Upload coverage to Codecov
#         uses: codecov/codecov-action@v2
#         with:
#           token: ${{ secrets.CODECOV_TOKEN }}
#           file: ./coverage.xml
#           flags: unittests
#           name: codecov-umbrella
#           fail_ci_if_error: true

#       - name: Fetch last commit details
#         id: commit
#         run: |
#           echo "::set-output name=commit_hash::$(git rev-parse HEAD)"
#           echo "::set-output name=commit_message::$(git log --format=%B -n 1)"
#           echo "::set-output name=commit_author::$(git log --format=%an -n 1)"
#           echo "::set-output name=commit_date::$(git log --format=%cd -n 1)"
#         shell: bash

name: Update Badges

on:
  push:
    branches:
      - JSL
  pull_request:
    branches:
      - JSL
  schedule:
    - cron: '0 * * * *'  # This will run every hour

jobs:
  update-badges:
    runs-on: ubuntu-20.04

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Fetch last commit details
        id: commit
        run: |
          LAST_COMMIT_DATE=$(git log -1 --format=%cd --date=short)
          echo "::set-output name=commit_date::$LAST_COMMIT_DATE"
          
      - name: Update last commit badge
        run: |
          COMMIT_DATE=${{ steps.commit.outputs.commit_date }}
          echo "<svg xmlns='http://www.w3.org/2000/svg' width='150' height='20'><rect width='150' height='20' fill='#555'/><rect x='37' width='113' height='20' fill='#4c1'/><rect rx='3' width='150' height='20' fill='none'/><g fill='#fff' text-anchor='middle' font-family='Verdana' font-size='110'><text x='195' y='140' transform='scale(.1)' textLength='260'>last commit</text><text x='945' y='140' transform='scale(.1)' textLength='630'>${COMMIT_DATE}</text></g></svg>" > badges/last_commit.svg

      - name: Fetch version details
        id: version
        run: |
          VERSION=$(python setup.py --version)
          echo "::set-output name=version::$VERSION"

      - name: Update version badge
        run: |
          VERSION=${{ steps.version.outputs.version }}
          echo "<svg xmlns='http://www.w3.org/2000/svg' width='150' height='20'><rect width='150' height='20' fill='#555'/><rect x='37' width='113' height='20' fill='#4c1'/><rect rx='3' width='150' height='20' fill='none'/><g fill='#fff' text-anchor='middle' font-family='Verdana' font-size='110'><text x='195' y='140' transform='scale(.1)' textLength='260'>version</text><text x='945' y='140' transform='scale(.1)' textLength='630'>${VERSION}</text></g></svg>" > badges/version.svg

      - name: Fetch license details
        id: license
        run: |
          LICENSE=$(cat LICENSE | head -1)
          echo "::set-output name=license::$LICENSE"

      - name: Update license badge
        run: |
          LICENSE=${{ steps.license.outputs.license }}
          echo "<svg xmlns='http://www.w3.org/2000/svg' width='150' height='20'><rect width='150' height='20' fill='#555'/><rect x='37' width='113' height='20' fill='#4c1'/><rect rx='3' width='150' height='20' fill='none'/><g fill='#fff' text-anchor='middle' font-family='Verdana' font-size='110'><text x='195' y='140' transform='scale(.1)' textLength='260'>license</text><text x='945' y='140' transform='scale(.1)' textLength='630'>${LICENSE}</text></g></svg>" > badges/license.svg

      - name: Fetch coverage details
        id: coverage
        run: |
          COVERAGE=$(grep -Po 'TOTAL.*? \K\d+(?=%)' coverage-report.txt)
          echo "::set-output name=coverage::$COVERAGE"

      - name: Update coverage badge
        run: |
          COVERAGE=${{ steps.coverage.outputs.coverage }}
          echo "<svg xmlns='http://www.w3.org/2000/svg' width='150' height='20'><rect width='150' height='20' fill='#555'/><rect x='37' width='113' height='20' fill='#4c1'/><rect rx='3' width='150' height='20' fill='none'/><g fill='#fff' text-anchor='middle' font-family='Verdana' font-size='110'><text x='195' y='140' transform='scale(.1)' textLength='260'>coverage</text><text x='945' y='140' transform='scale(.1)' textLength='630'>${COVERAGE}%</text></g></svg>" > badges/coverage.svg

      - name: Commit and push badges
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git add badges/*.svg
          git commit -m "Update badges"
          git push
